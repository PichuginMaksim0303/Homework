apiVersion: v1
kind: Namespace
metadata:
  name: pichugin-maksim-0303
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: pichugin-maksim-0303
  labels:
    app: postgres
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: password
            - name: POSTGRES_DB
              value: testdb
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      imagePullSecrets:
        - name: dockerhub-secret
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        storageClassName: local-path
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pichugin-maksim
  namespace: pichugin-maksim-0303
  labels:
    app: pichugin-maksim
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pichugin-maksim
  template:
    metadata:
      labels:
        app: pichugin-maksim
    spec:
      initContainers:
        - name: init-app-data
          image: pichuginmaksim/db:latest
          command: ["sh", "-c", "echo 'Initializing application data'"]
      containers:
        - name: pichugin-maksim
          image: pichuginmaksim/db:latest
          env:
            - name: DB_HOST
              value: postgres.pichugin-maksim-0303.svc.cluster.local
            - name: DB_PORT
              value: "5432"
            - name: DB_USER
              value: postgres
            - name: DB_PASSWORD
              value: password
            - name: DB_NAME
              value: testdb
          command: ["/bin/sh", "-c", "until pg_isready -h $DB_HOST -p $DB_PORT; do echo waiting for db; sleep 2; done && mpirun --allow-run-as-root -np 2 ./mpi_program"]
          args: ["-np", "2", "./mpi_program"]
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: app-data
              mountPath: /app/public
      volumes:
        - name: app-data
          persistentVolumeClaim:
            claimName: app-data
      imagePullSecrets:
        - name: dockerhub-secret
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: pichugin-maksim-0303
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: app-data
  namespace: pichugin-maksim-0303
spec:
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi